Landing Page AI Lead Generation Project

We are starting a new project based on an existing internal QA system previously used for reviewing Messenger (Facebook & Instagram) AI chat sessions.

üü¢ Project Context:
	‚Ä¢	We‚Äôve just duplicated or imported the previous Messenger-based QA project into this new Replit workspace.
	‚Ä¢	All the features from the previous project should remain intact:
	‚Ä¢	Internal user login
	‚Ä¢	Role-based permissions
	‚Ä¢	Session tagging and classification
	‚Ä¢	Session history and filters
	‚Ä¢	Quality review tools and notes

The only difference is that this version is for AI chat sessions from a web landing page, not from social media messengers.

‚∏ª

‚úÖ Tasks to Perform

1. Rename Project Metadata
	‚Ä¢	Update any project title, labels, or config that references ‚ÄúMessenger‚Äù to instead say ‚ÄúWeb Chat‚Äù or ‚ÄúLanding Page Chat‚Äù.

2. Add Replit Database
	‚Ä¢	Set up a Replit database for storing:
	‚Ä¢	Chat session metadata
	‚Ä¢	Chat transcript messages
	‚Ä¢	Final lead data collected (e.g. name, email)
	‚Ä¢	Completion status and timestamps
	‚Ä¢	Use a similar schema to the Messenger version, but add a field like session_source = "web_chat" for filtering.
	- ensure you use the same schema as the project we duplicated 

3. Set Up Front-End Web Chat

You will embed a live AI chat on a landing page. This should be hosted via Replit and styled professionally.
	‚Ä¢	Use the BotUI framework as the chat frontend.
	‚Ä¢	Use BoxUI (https://box-ui.com or similar CSS component library) as the layout and design system.
	‚Ä¢	The front-end must:
	‚Ä¢	Start the session when the user interacts
	‚Ä¢	Display friendly questions and AI responses
	‚Ä¢	Collect basic lead info (name, email, etc.)
	‚Ä¢	Validate the email address format, and re-prompt if invalid
	‚Ä¢	Post final data to a defined webhook

4. Install Required Packages in Replit

Install the following:

npm install botui vue iframe-resizer

In your index.html (or equivalent entry file), also include:

<link rel="stylesheet" href="https://unpkg.com/botui/build/botui.min.css" />
<link rel="stylesheet" href="https://unpkg.com/botui/build/botui-theme-default.css" />
<script src="https://unpkg.com/vue"></script>
<script src="https://unpkg.com/botui/build/botui.min.js"></script>

5. Embed Support for iframe-resizer

We‚Äôll be embedding this chat app into a WordPress page using an iframe.
	‚Ä¢	Add the iframe-resizer content script to your hosted Replit front-end (inside the iframe):

<script src="https://unpkg.com/iframe-resizer/js/iframeResizer.contentWindow.min.js"></script>

	‚Ä¢	Ensure the layout dynamically resizes based on chat height.
	‚Ä¢	On the client WordPress site, they will install the host script:

<script src="https://unpkg.com/iframe-resizer/js/iframeResizer.min.js"></script>
<script>
  iFrameResize({ log: false }, '#replit-chat-iframe');
</script>

6. Webhook for N8n Integration

At the end of the session, send a POST request to a designated N8n webhook URL (we will define it later). Send:

{
  "name": "John Smith",
  "email": "john@example.com",
  "chat_transcript": [...],
  "completed": true,
  "source": "web_chat"
}

Store a copy of this in the Reklet DB and mark whether the webhook was delivered successfully.

‚∏ª

üìù Notes for Replit Agent
	‚Ä¢	You don‚Äôt need to modify QA features unless something breaks ‚Äî we‚Äôre simply extending the functionality for web-based chat sessions.
	‚Ä¢	Assume this is for one client only.
	‚Ä¢	The internal review panel is already authenticated and permissioned ‚Äî reuse existing components to display new sessions.

‚∏ª

Let me know if you‚Äôd like to scaffold the directory structure, generate the front-end index.html, or include test data.